{"mappings":"2MAAAA,EAAA,S,2DCAAC,EAAAC,QAAiB,IAAAC,IAAoBH,EAAA,SAAAI,QAA6C,SAAAC,OAAAC,KAAAC,KAAUC,U,kDCuB5FC,E,gJArBA,IAAIC,EAAU,CAAC,EAqBfD,EAXA,SAAiBE,GACf,IAAIC,EAAWF,EAAQC,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,CACT,C,sCCiBA,MAAME,EAAQ,CACZC,MAAO,cACPC,KAAM,cAGFC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,YAAaF,SAASC,cAAc,yBAItC,SAASE,EAASC,GAChBN,EAAKC,KAAKM,UAAUC,IAAIF,GACxBN,EAAKI,YAAYK,QAAUH,IAAUT,EAAME,KAC3CW,aAAaC,QAAQ,QAASL,EAChC,CAGA,SAASM,EAAYN,GACnBN,EAAKC,KAAKM,UAAUM,OAAOP,EAC7B,CAGA,MAAMQ,EAAaJ,aAAaK,QAAQ,SAGpCD,GACFT,EAASS,GAIXd,EAAKI,YAAYY,iBAAiB,UAAWC,IAC3C,MAAMX,EAAQW,EAAEC,OAAOT,QAAUZ,EAAME,KAAOF,EAAMC,MACpDc,EAAYf,EAAME,MAClBa,EAAYf,EAAMC,OAClBO,EAASC,EAAA,G,sCCpEX,MAAMa,EAAWjB,SAASC,cAAc,YAClCiB,EAAelB,SAASC,cAAc,kBAAkBkB,UACxDC,EAAmBC,WAAWC,QAAQJ,GAE5CK,MAAM,mBACHC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMC,EAASD,EAAKE,KAAIC,GAAQV,EAAiBU,KAAOC,KAAK,IAC7Dd,EAASe,mBAAmB,YAAaJ,EAAA,IAE1CK,OAAMC,GAASC,QAAQC,IAAIF,I","sources":["src/index.js","node_modules/@parcel/runtime-js/lib/runtime-94fce18c44911054.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/theme-switch.js","src/js/menu.js"],"sourcesContent":["import './index.html';\nimport './sass/index.scss';\nimport './js/theme-switch.js';\nimport './js/menu.js';\n// import templateFunction from './templates/template.hbs';\n// document.body.innerHTML = templateFunction();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"aiARQ\")).toString();","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","// const checkbox = document.querySelector('input[type=\"checkbox\"]');\n// const element = document.querySelector(\"body\");\n\n\n// //const savedMessage = localStorage.getItem(\"theme\");\n\n// // if (savedMessage) {\n// //   element.classList = savedMessage;\n// // }\n\n// populateMessage();\n\n// checkbox.addEventListener(\"change\", handleTheme);\n\n// function handleTheme(event) {\n//   event.preventDefault();\n//   if (this.checked === true) {\n//     element.classList.remove(\"light-theme\"); //Тётная тема\n//     element.classList.add(\"dark-theme\");\n//     const message = element.classList;\n//     localStorage.setItem(\"theme\", message);\n//   } else {\n//     element.classList.remove(\"dark-theme\"); //Светлая тема\n//     element.classList.add(\"light-theme\");\n//     const message = element.classList;\n//     localStorage.setItem(\"theme\", message);\n//   }\n// }\n\n// function populateMessage() {\n//   const savedMessage = localStorage.getItem(\"theme\");\n//   if (savedMessage) {\n//     element.classList = savedMessage;\n//   }\n// }\n\n\nconst Theme = {\n  LIGHT: 'light-theme',\n  DARK: 'dark-theme',\n};\n\nconst refs = {\n  body: document.querySelector('body'),\n  themeSwitch: document.querySelector('#theme-switch-toggle'),\n};\n\n// функция установки темы\nfunction setTheme(theme) {\n  refs.body.classList.add(theme);\n  refs.themeSwitch.checked = theme === Theme.DARK;\n  localStorage.setItem('theme', theme);\n}\n\n// функция удаления темы\nfunction removeTheme(theme) {\n  refs.body.classList.remove(theme);\n}\n\n// проверяем, есть ли уже сохраненная тема в localStorage\nconst savedTheme = localStorage.getItem('theme');\n\n// если есть, устанавливаем сохраненную тему\nif (savedTheme) {\n  setTheme(savedTheme);\n}\n\n// при изменении чекбокса меняем тему\nrefs.themeSwitch.addEventListener('change', (e) => {\n  const theme = e.target.checked ? Theme.DARK : Theme.LIGHT;\n  removeTheme(Theme.DARK);\n  removeTheme(Theme.LIGHT);\n  setTheme(theme);\n});\n","\n// import templateFunction from './templates/template.hbs';\n// document.body.innerHTML = templateFunction();\n\nconst menuList = document.querySelector('.js-menu');\nconst menuTemplate = document.querySelector('#menu-template').innerHTML;\nconst compiledTemplate = Handlebars.compile(menuTemplate);\n\nfetch('./src/menu.json')\n  .then(response => response.json())\n  .then(menu => {\n    const markup = menu.map(item => compiledTemplate(item)).join('');\n    menuList.insertAdjacentHTML('beforeend', markup);\n  })\n  .catch(error => console.log(error));\n"],"names":["parcelRequire","module","exports","URL","resolve","import","meta","url","toString","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","id","resolved","Error","$fd11fd390790c376$var$Theme","LIGHT","DARK","$fd11fd390790c376$var$refs","body","document","querySelector","themeSwitch","$fd11fd390790c376$var$setTheme","theme","classList","add","checked","localStorage","setItem","$fd11fd390790c376$var$removeTheme","remove","$fd11fd390790c376$var$savedTheme","getItem","addEventListener","e","target","$312afa7e9128739a$var$menuList","$312afa7e9128739a$var$menuTemplate","innerHTML","$312afa7e9128739a$var$compiledTemplate","Handlebars","compile","fetch","then","response","json","menu","markup","map","item","join","insertAdjacentHTML","catch","error","console","log"],"version":3,"file":"project-site.c91a3fd9.js.map"}