{"mappings":"AAqCA,MAAMA,EAAQ,CACZC,MAAO,cACPC,KAAM,cAGFC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,YAAaF,SAASC,cAAc,yBAItC,SAASE,EAASC,GAChBN,EAAKC,KAAKM,UAAUC,IAAIF,GACxBN,EAAKI,YAAYK,QAAUH,IAAUT,EAAME,KAC3CW,aAAaC,QAAQ,QAASL,EAChC,CAGA,SAASM,EAAYN,GACnBN,EAAKC,KAAKM,UAAUM,OAAOP,EAC7B,CAGA,MAAMQ,EAAaJ,aAAaK,QAAQ,SAGpCD,GACFT,EAASS,GAIXd,EAAKI,YAAYY,iBAAiB,UAAWC,IAC3C,MAAMX,EAAQW,EAAEC,OAAOT,QAAUZ,EAAME,KAAOF,EAAMC,MACpDc,EAAYf,EAAME,MAClBa,EAAYf,EAAMC,OAClBO,EAASC,EAAA,ICxEXa,QAAQC,IAAI,4BAMZ,MAAMC,EAAWC,WAAWC,QAAQ,kBACpCJ,QAAQC,IAAIC,EAAS,CAAEG,KAAM","sources":["src/js/theme-switch.js","src/index.js"],"sourcesContent":["// const checkbox = document.querySelector('input[type=\"checkbox\"]');\n// const element = document.querySelector(\"body\");\n\n\n// //const savedMessage = localStorage.getItem(\"theme\");\n\n// // if (savedMessage) {\n// //   element.classList = savedMessage;\n// // }\n\n// populateMessage();\n\n// checkbox.addEventListener(\"change\", handleTheme);\n\n// function handleTheme(event) {\n//   event.preventDefault();\n//   if (this.checked === true) {\n//     element.classList.remove(\"light-theme\"); //Тётная тема\n//     element.classList.add(\"dark-theme\");\n//     const message = element.classList;\n//     localStorage.setItem(\"theme\", message);\n//   } else {\n//     element.classList.remove(\"dark-theme\"); //Светлая тема\n//     element.classList.add(\"light-theme\");\n//     const message = element.classList;\n//     localStorage.setItem(\"theme\", message);\n//   }\n// }\n\n// function populateMessage() {\n//   const savedMessage = localStorage.getItem(\"theme\");\n//   if (savedMessage) {\n//     element.classList = savedMessage;\n//   }\n// }\n\n\nconst Theme = {\n  LIGHT: 'light-theme',\n  DARK: 'dark-theme',\n};\n\nconst refs = {\n  body: document.querySelector('body'),\n  themeSwitch: document.querySelector('#theme-switch-toggle'),\n};\n\n// функция установки темы\nfunction setTheme(theme) {\n  refs.body.classList.add(theme);\n  refs.themeSwitch.checked = theme === Theme.DARK;\n  localStorage.setItem('theme', theme);\n}\n\n// функция удаления темы\nfunction removeTheme(theme) {\n  refs.body.classList.remove(theme);\n}\n\n// проверяем, есть ли уже сохраненная тема в localStorage\nconst savedTheme = localStorage.getItem('theme');\n\n// если есть, устанавливаем сохраненную тему\nif (savedTheme) {\n  setTheme(savedTheme);\n}\n\n// при изменении чекбокса меняем тему\nrefs.themeSwitch.addEventListener('change', (e) => {\n  const theme = e.target.checked ? Theme.DARK : Theme.LIGHT;\n  removeTheme(Theme.DARK);\n  removeTheme(Theme.LIGHT);\n  setTheme(theme);\n});\n","console.log(\"parcel-plugin-handlebars\");\n\nimport './sass/index.scss';\nimport './js/theme-switch.js';\n\n//const Handlebars = require(\"handlebars\");\nconst template = Handlebars.compile(\"Name: {{name}}\");\nconsole.log(template({ name: \"Nils\" }));\n\n// menu.exports = {\n//     data: 'src/markup/',\n//     decorators: 'src/markup/decorators',\n//     helpers: 'src/markup/helpers',\n//     layouts: 'src/markup/layouts',\n//     partials: 'src/markup/partials',\n//   };"],"names":["$fd11fd390790c376$var$Theme","LIGHT","DARK","$fd11fd390790c376$var$refs","body","document","querySelector","themeSwitch","$fd11fd390790c376$var$setTheme","theme","classList","add","checked","localStorage","setItem","$fd11fd390790c376$var$removeTheme","remove","$fd11fd390790c376$var$savedTheme","getItem","addEventListener","e","target","console","log","$1f0dc3b9307be026$var$template","Handlebars","compile","name"],"version":3,"file":"index.11bbeeb8.js.map"}